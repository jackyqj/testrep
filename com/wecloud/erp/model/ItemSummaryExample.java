package com.wecloud.erp.model;

import java.util.ArrayList;
import java.util.List;

public class ItemSummaryExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected String limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected String limitEnd;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public ItemSummaryExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void setLimitStart(String limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public String getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public void setLimitEnd(String limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public String getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTotalQtyIsNull() {
			addCriterion("TOTAL_QTY is null");
			return (Criteria) this;
		}

		public Criteria andTotalQtyIsNotNull() {
			addCriterion("TOTAL_QTY is not null");
			return (Criteria) this;
		}

		public Criteria andTotalQtyEqualTo(Double value) {
			addCriterion("TOTAL_QTY =", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyNotEqualTo(Double value) {
			addCriterion("TOTAL_QTY <>", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyGreaterThan(Double value) {
			addCriterion("TOTAL_QTY >", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyGreaterThanOrEqualTo(Double value) {
			addCriterion("TOTAL_QTY >=", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyLessThan(Double value) {
			addCriterion("TOTAL_QTY <", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyLessThanOrEqualTo(Double value) {
			addCriterion("TOTAL_QTY <=", value, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyIn(List<Double> values) {
			addCriterion("TOTAL_QTY in", values, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyNotIn(List<Double> values) {
			addCriterion("TOTAL_QTY not in", values, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyBetween(Double value1, Double value2) {
			addCriterion("TOTAL_QTY between", value1, value2, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalQtyNotBetween(Double value1, Double value2) {
			addCriterion("TOTAL_QTY not between", value1, value2, "totalQty");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIsNull() {
			addCriterion("TOTAL_AMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIsNotNull() {
			addCriterion("TOTAL_AMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andTotalAmountEqualTo(Double value) {
			addCriterion("TOTAL_AMOUNT =", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotEqualTo(Double value) {
			addCriterion("TOTAL_AMOUNT <>", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountGreaterThan(Double value) {
			addCriterion("TOTAL_AMOUNT >", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountGreaterThanOrEqualTo(Double value) {
			addCriterion("TOTAL_AMOUNT >=", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountLessThan(Double value) {
			addCriterion("TOTAL_AMOUNT <", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountLessThanOrEqualTo(Double value) {
			addCriterion("TOTAL_AMOUNT <=", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIn(List<Double> values) {
			addCriterion("TOTAL_AMOUNT in", values, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotIn(List<Double> values) {
			addCriterion("TOTAL_AMOUNT not in", values, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountBetween(Double value1, Double value2) {
			addCriterion("TOTAL_AMOUNT between", value1, value2, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotBetween(Double value1, Double value2) {
			addCriterion("TOTAL_AMOUNT not between", value1, value2, "totalAmount");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table itemsummary
	 * @mbggenerated  Sat Apr 23 10:00:33 HKT 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table itemsummary
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 19 00:03:40 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}